[
["03-overlaypoints.html", "3 Adding Resources 3.1 Geocode 3.2 Convert to Spatial Data 3.3 Basic Map of Points 3.4 Overlay Points &amp; Style 3.5 Integrate More Data 3.6 Graduated Symbology 3.7 Style Final Map", " 3 Adding Resources 3.1 Geocode First we load the tidygeocoder to get our geocoding done. Note, this uses the interent to process, so is not suitable for HIPPA protected data like individual, living person addresses. library(tidygeocoder) ## Warning: package &#39;tidygeocoder&#39; was built under R version 3.6.2 Let’s read in and inspect data for methadone (evidenes based medication for opioid use disorder) providers. These addresses were made available by SAMSHA. methadoneClinics &lt;- read.csv(&quot;data/chicago_methadone_nogeometry.csv&quot;) head(methadoneClinics) ## X Name ## 1 1 Chicago Treatment and Counseling Center, Inc. ## 2 2 Sundace Methadone Treatment Center, LLC ## 3 3 Soft Landing Interventions/DBA Symetria Recovery of Lakeview ## 4 4 PDSSC - Chicago, Inc. ## 5 5 Center for Addictive Problems, Inc. ## 6 6 Family Guidance Centers, Inc. ## Address City State Zip ## 1 4453 North Broadway st. Chicago IL 60640 ## 2 4545 North Broadway St. Chicago IL 60640 ## 3 3934 N. Lincoln Ave. Chicago IL 60613 ## 4 2260 N. Elston Ave. Chicago IL 60614 ## 5 609 N. Wells St. Chicago IL 60654 ## 6 310 W. Chicago Ave. Chicago IL 60654 Let’s geocode one address first, just to make sure our system is working. We’ll use the “cascade” method which use the US Census and OpenStreetMap geocoders. sample &lt;- geo(&quot;2260 N. Elston Ave. Chicago, IL&quot;, lat = latitude, long = longitude, method = &#39;cascade&#39;) head(sample) ## # A tibble: 1 x 4 ## address latitude longitude geo_method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 2260 N. Elston Ave. Chicago, IL 41.9 -87.7 census As we prepare for geocoding, check out the structure of the dataset. Do we need to change anything? The data should be a character to be read properly. str(methadoneClinics) ## &#39;data.frame&#39;: 27 obs. of 6 variables: ## $ X : int 1 2 3 4 5 6 7 8 9 10 ... ## $ Name : Factor w/ 25 levels &quot;*&quot;,&quot;A Rincon Family Services&quot;,..: 5 25 23 21 3 8 2 1 14 24 ... ## $ Address: Factor w/ 27 levels &quot;110 E. 79th St.&quot;,..: 20 21 17 6 23 10 16 3 5 8 ... ## $ City : Factor w/ 1 level &quot;Chicago&quot;: 1 1 1 1 1 1 1 1 1 1 ... ## $ State : Factor w/ 1 level &quot;IL&quot;: 1 1 1 1 1 1 1 1 1 1 ... ## $ Zip : int 60640 60640 60613 60614 60654 60654 60651 60607 60607 60616 ... We need to clean the data a bit. We’ll add a new column for full address, as required by the geocoding service. When you use a geocoding service, be sure to read the documentation and understand how the data needs to be formatted for input. methadoneClinics$fullAdd &lt;- paste(as.character(methadoneClinics$Address), as.character(methadoneClinics$City), as.character(methadoneClinics$State), as.character(methadoneClinics$Zip)) We’re ready to go! Batch geocode with one function: geoCodedClinics &lt;- geocode(methadoneClinics, address = &#39;fullAdd&#39;, lat = latitude, long = longitude, method = &#39;cascade&#39;) head(geoCodedClinics) ## # A tibble: 6 x 10 ## X Name Address City State Zip fullAdd latitude longitude geo_method ## &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 1 Chicag… 4453 No… Chic… IL 60640 4453 N… NA NA osm ## 2 2 Sundac… 4545 No… Chic… IL 60640 4545 N… NA NA osm ## 3 3 Soft L… 3934 N.… Chic… IL 60613 3934 N… 42.0 -87.7 census ## 4 4 PDSSC … 2260 N.… Chic… IL 60614 2260 N… 41.9 -87.7 census ## 5 5 Center… 609 N. … Chic… IL 60654 609 N.… 41.9 -87.6 census ## 6 6 Family… 310 W. … Chic… IL 60654 310 W.… 41.9 -87.6 census There were two that didn’t geocode correctly. You can either inspect further, change the addresses, searching the address and pulling the lat/long using Google Maps and inputting manually, or omit. For this exercise we’ll just omit the two clinics that didn’t geocode correctly. geoCodedClinics2 &lt;- na.omit(geoCodedClinics) 3.2 Convert to Spatial Data This is not spatial data yet! To convert a static CSV file to spatial data, we use the powerful st_as-sf function from sf. Indicate the x,y parameters (longitude, latitude) and the coordinate reference system used. Our geocoding service used the standard EPSG:4326, so we input that here. library(sf) ## Warning: package &#39;sf&#39; was built under R version 3.6.2 ## Linking to GEOS 3.7.2, GDAL 2.4.2, PROJ 5.2.0 methadoneSf &lt;- st_as_sf(geoCodedClinics2, coords = c(&quot;longitude&quot;, &quot;latitude&quot;), crs = 4326) 3.3 Basic Map of Points For a really simple basemap of points – to ensure they were geocoded and converted to spatial data correctly, we use tmap. We’ll use the interactive version to view. library(tmap) ## Warning: replacing previous import &#39;sf::st_make_valid&#39; by ## &#39;lwgeom::st_make_valid&#39; when loading &#39;tmap&#39; tmap_mode(&quot;view&quot;) ## tmap mode set to interactive viewing tm_shape(methadoneSf) + tm_dots() ## Warning in `$.crs`(gm$shape.master_crs, &quot;proj4string&quot;): CRS uses proj4string, ## which is deprecated. If your points didn’t plot correctly: Did you flip the longitude/latitude values? Did you input the correct CRS? Those two issues are the most common errors. 3.4 Overlay Points &amp; Style Let’s add our zip code map from the previous module. First load the data, then overlay. Chi_Zipsf &lt;- st_read(&quot;data/ChiZipMaster1.geojson&quot;) ## Reading layer `ChiZipMaster1&#39; from data source ## `/Users/maryniakolak/code/Intro2RSpatialMed/data/ChiZipMaster1.geojson&#39; ## using driver `GeoJSON&#39; ## Simple feature collection with 180 features and 31 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: -87.87596 ymin: 41.64454 xmax: -87.52414 ymax: 42.02304 ## CRS: 4326 With this overlay, we’ll add a “hack” to include the methadone clinic points in a legend. tmap_mode(&quot;plot&quot;) ## tmap mode set to plotting ## 1st layer (gets plotted first) tm_shape(Chi_Zipsf) + tm_fill(&quot;Case.Rate...Cumulative&quot;, style=&quot;jenks&quot;, pal=&quot;BuPu&quot;, n=4, title = &quot;COVID Rt&quot;) + ## 2nd layer (overlay) tm_shape(methadoneSf) + tm_dots(size = 0.2, col = &quot;gray20&quot;) + tm_add_legend(&quot;symbol&quot;, col = &quot;gray20&quot;, size = .2, labels = &quot;Methadone MOUD&quot;) + tm_layout(legend.outside = TRUE, legend.outside.position = &quot;right&quot;, title.snap.to.legend = TRUE) 3.5 Integrate More Data AffHousing &lt;- read.csv(&quot;data/Affordable_Rental_Housing_Developments.csv&quot;) head(AffHousing) ## Community.Area.Name Community.Area.Number Property.Type ## 1 Englewood 68 Veterans ## 2 Rogers Park 1 Senior ## 3 Uptown 3 ARO ## 4 Edgewater 77 Senior ## 5 Roseland 49 Supportive Housing ## 6 Humboldt Park 23 Multifamily ## Property.Name Address Zip.Code Phone.Number ## 1 Hope Manor Village 5900-6100 S. Green/Peoria/Sangamon 60621 312-564-2393 ## 2 Morse Senior Apts. 6928 N. Wayne Ave. 60626 312-602-6207 ## 3 The Draper 5050 N. Broadway 60640 312-818-1722 ## 4 Pomeroy Apts. 5650 N. Kenmore Ave. 60660 773-275-7820 ## 5 Wentworth Commons 11045 S. Wentworth Ave. 60628 773-568-7804 ## 6 Nelson Mandela Apts. 607 N. Sawyer Ave. 60624 773-227-6332 ## Management.Company Units X.Coordinate Y.Coordinate Latitude ## 1 Volunteers of America Illinois 36 NA NA NA ## 2 Morse Urban Dev. 44 1165844 1946059 42.00757 ## 3 Flats LLC 35 1167357 1933882 41.97413 ## 4 Habitat Company 198 1168181 1937918 41.98519 ## 5 Mercy Housing Lakefront 50 1176951 1831516 41.69302 ## 6 Bickerdike Apts. 6 1154640 1903912 41.89215 ## Longitude Location ## 1 NA ## 2 -87.66517 (42.0075737709331, -87.6651711448293) ## 3 -87.65996 (41.9741295261027, -87.6599553011627) ## 4 -87.65681 (41.9851867755403, -87.656808676983) ## 5 -87.62777 (41.6930159120977, -87.6277673462214) ## 6 -87.70753 (41.8921534052465, -87.7075265659001) AffHousing &lt;- na.omit(AffHousing) str(AffHousing) ## &#39;data.frame&#39;: 487 obs. of 14 variables: ## $ Community.Area.Name : Factor w/ 65 levels &quot;Albany Park&quot;,..: 49 55 17 50 25 22 65 45 45 37 ... ## $ Community.Area.Number: int 1 3 77 49 23 38 42 36 36 8 ... ## $ Property.Type : Factor w/ 26 levels &quot;65+/Supportive&quot;,..: 13 2 13 19 8 8 8 8 13 19 ... ## $ Property.Name : Factor w/ 394 levels &quot;1038 N. Ashland&quot;,..: 214 338 257 376 218 186 109 235 234 348 ... ## $ Address : Factor w/ 478 levels &quot;10 N. Hamlin Ave.&quot;,..: 424 348 367 17 384 298 71 279 275 64 ... ## $ Zip.Code : int 60626 60640 60660 60628 60624 60653 60637 60653 60653 60622 ... ## $ Phone.Number : Factor w/ 326 levels &quot;217-779-5697&quot;,..: 57 78 134 221 111 232 225 164 164 32 ... ## $ Management.Company : Factor w/ 200 levels &quot;@properties&quot;,..: 112 57 66 104 17 80 176 167 169 74 ... ## $ Units : int 44 35 198 50 6 71 67 534 148 40 ... ## $ X.Coordinate : num 1165844 1167357 1168181 1176951 1154640 ... ## $ Y.Coordinate : num 1946059 1933882 1937918 1831516 1903912 ... ## $ Latitude : num 42 42 42 41.7 41.9 ... ## $ Longitude : num -87.7 -87.7 -87.7 -87.6 -87.7 ... ## $ Location : Factor w/ 477 levels &quot;&quot;,&quot;(41.648457411436, -87.5401231660406)&quot;,..: 475 455 462 8 289 122 67 147 151 328 ... ## - attr(*, &quot;na.action&quot;)= &#39;omit&#39; Named int 1 ## ..- attr(*, &quot;names&quot;)= chr &quot;1&quot; AffHousingSf &lt;- st_as_sf(AffHousing, coords = c(&quot;Longitude&quot;, &quot;Latitude&quot;), crs = 4326) tm_shape(AffHousingSf) + tm_dots() tm_shape(Chi_Zipsf) + tm_polygons(col = &quot;gray80&quot;) + tm_shape(AffHousingSf) + tm_bubbles(&quot;Units&quot;, col = &quot;purple&quot;) str(AffHousingSf) ## Classes &#39;sf&#39; and &#39;data.frame&#39;: 487 obs. of 13 variables: ## $ Community.Area.Name : Factor w/ 65 levels &quot;Albany Park&quot;,..: 49 55 17 50 25 22 65 45 45 37 ... ## $ Community.Area.Number: int 1 3 77 49 23 38 42 36 36 8 ... ## $ Property.Type : Factor w/ 26 levels &quot;65+/Supportive&quot;,..: 13 2 13 19 8 8 8 8 13 19 ... ## $ Property.Name : Factor w/ 394 levels &quot;1038 N. Ashland&quot;,..: 214 338 257 376 218 186 109 235 234 348 ... ## $ Address : Factor w/ 478 levels &quot;10 N. Hamlin Ave.&quot;,..: 424 348 367 17 384 298 71 279 275 64 ... ## $ Zip.Code : int 60626 60640 60660 60628 60624 60653 60637 60653 60653 60622 ... ## $ Phone.Number : Factor w/ 326 levels &quot;217-779-5697&quot;,..: 57 78 134 221 111 232 225 164 164 32 ... ## $ Management.Company : Factor w/ 200 levels &quot;@properties&quot;,..: 112 57 66 104 17 80 176 167 169 74 ... ## $ Units : int 44 35 198 50 6 71 67 534 148 40 ... ## $ X.Coordinate : num 1165844 1167357 1168181 1176951 1154640 ... ## $ Y.Coordinate : num 1946059 1933882 1937918 1831516 1903912 ... ## $ Location : Factor w/ 477 levels &quot;&quot;,&quot;(41.648457411436, -87.5401231660406)&quot;,..: 475 455 462 8 289 122 67 147 151 328 ... ## $ geometry :sfc_POINT of length 487; first list element: &#39;XY&#39; num -87.7 42 ## - attr(*, &quot;sf_column&quot;)= chr &quot;geometry&quot; ## - attr(*, &quot;agr&quot;)= Factor w/ 3 levels &quot;constant&quot;,&quot;aggregate&quot;,..: NA NA NA NA NA NA NA NA NA NA ... ## ..- attr(*, &quot;names&quot;)= chr &quot;Community.Area.Name&quot; &quot;Community.Area.Number&quot; &quot;Property.Type&quot; &quot;Property.Name&quot; ... tm_shape(Chi_Zipsf) + tm_polygons(col = &quot;gray80&quot;) + tm_shape(AffHousingSf) + tm_bubbles(&quot;Units&quot;, style = &quot;pretty&quot;) tm_shape(Chi_Zipsf) + tm_fill(&quot;Case.Rate...Cumulative&quot;, style=&quot;jenks&quot;, pal=&quot;BuPu&quot;, n=4, title = &quot;COVID Rt&quot;) + tm_text(&quot;zip&quot;, size = 0.7) + tm_shape(AffHousingSf) + tm_bubbles(&quot;Units&quot;) + tm_shape(methadoneSf) + tm_dots(size = 0.2, col = &quot;gray20&quot;) + tm_add_legend(&quot;symbol&quot;, col = &quot;gray20&quot;, size = .2, labels = &quot;Methadone MOUD&quot;) + tm_layout(legend.outside = TRUE, legend.outside.position = &quot;right&quot;) 3.6 Graduated Symbology 3.7 Style Final Map "]
]
